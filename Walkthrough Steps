The first step to do her is to create a master server for ansbile 

once the server is created you need to add three servers with this server image from AWS platform 

While launching the servers you need to use the same key for better and to make it easier for you to manage that's ho I have done it you can do the other way now copy that keyfile lets say in my case its 

devops.pem   cat this key copy the content

ssh the master server go to ~/.ssh directory create a file maybe ansible_key paste the key content this will allow you to access the slave servers. 

Once done you can test it through 

sudo ssh -i ~/.ssh/ansible_key ubuntu@serverIP 


Now create inventory hosts file in ansible directory this repo has two branches main and master the master branch contains the ansible playbooks and files that I created on the server that you can view aswell 

inventory file (hosts) syntax


[servers]
server1 ansible_host=107.23.142.**
server2 ansible_host=54.174.120.**
server3 ansible_host=100.26.230.**


[all:vars]
ansible_python_interpreter=/usr/bin/python3



to check if it is correct use the command 

ansible-inventory --list -y 

or with the path of your ansible directory like this 

ansible-inventory --list -y -i /root/ansible

now to ping the clients 

ansible all -m ping -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key

you might face error sometimes so try to ssh the slave server with the command 

ssh -i ~/.ssh/ansible_key ubuntu@107.23.142.165

now if you want to check the free space on all the slave servers you can use the command

ansible all -a "df -hT" -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key

and for free RAM

ansible all -a "free -h" -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key

to see the servers uptime use the command 

ansible servers -a "uptime" -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key


* Playbook


To create a playbook the first thing you need to do that I usually do is create a new directory playbooks inside ansible with the command

mkdir playbooks

then 

cd playbooks

The playbook we are making is to create a file automatically inside the slave servers 

vi createfile.yml 


Once the file is created run the command 

ansible-playbook createfile.yml -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key

this will create files in my slave servers


now we can create a new file to createusers.yml in slave servers to practice

one done run the same command again also you can find the files in playbooks directory in master branch 

ansible-playbook createusers.yml -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key


There's one last file that we are going to create here it is the playbook to install docker on the slave servers the file can be found in master branch once the file is created simply run the command 

ansible-playbook install_docker.yml -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key


it will install docker on the servers all the scripts here are tested and run successfully. 


just incase if you face error like the servers are not updated you can use this command to update all the servers

ansible all -m apt -a "upgrade=yes update_cache=yes cache_valid_time=86400" --become  -i /home/ubuntu/ansible/hosts --private-key=~/.ssh/ansible_key


